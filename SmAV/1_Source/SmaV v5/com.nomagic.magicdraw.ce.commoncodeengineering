<?xml version="1.0" encoding="ASCII"?><xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:md.ce.corbaidl.rt.options="http://www.nomagic.com/magicdraw/ce/corbaidl/rt/options/1" xmlns:md.ce.cppAnsi.rt.options="http://www.nomagic.com/magicdraw/ce/cppAnsi/rt/options/1" xmlns:md.ce.csh.code.documentation="http://www.nomagic.com/magicdraw/ce/csh/code/documentation/1" xmlns:md.ce.csh.rt.options="http://www.nomagic.com/magicdraw/ce/csh/rt/options/1" xmlns:md.ce.java.code.documentation="http://www.nomagic.com/magicdraw/ce/java/code/documentation/1" xmlns:md.ce.java.rt.options="http://www.nomagic.com/magicdraw/ce/java/rt/options/1" xmlns:md.ce.msil.rt.options="http://www.nomagic.com/magicdraw/ce/msil/rt/options/1" xmlns:md.ce.rt.options="http://www.nomagic.com/magicdraw/ce/rt/options/1">	<md.ce.rt.options:Options xmi:id="_W47ZsGsCEeCKy58F-nptQQ" tempDirectory="Active Directory" defaultWorkingDirectory="&lt;install.root&gt;" spaces="8" defaultLanguage="Java" visualizationOption="1" codeGenerationReverseOption="2">		<defaultWorkingPackage href="PROJECT-9a658237-b5dc-40c8-9844-5779778b572e?resource=com.nomagic.magicdraw.uml_umodel.model#eee_1045467100313_135436_1"></defaultWorkingPackage>		<defaultImportedPackages href="PROJECT-9a658237-b5dc-40c8-9844-5779778b572e?resource=com.nomagic.magicdraw.uml_umodel.model#eee_1045467100313_135436_1"></defaultImportedPackages></md.ce.rt.options:Options>	<md.ce.java.rt.options:JavaLanguageOptions xmi:id="_D4tpEOQMEeCJQfWZbM1pkQ" commentStyle="0" header="@(#) $FILE_NAME" documentationProcessorID="STANDARD_PROCESSOR" classpath="C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes" javaSource="8.0">		<documentationTagProcessors xsi:type="md.ce.java.code.documentation:JavaDocumentationProcessor" xmi:id="_oOJsgI6vEeG5DZT_fiQl2g" ID="JAVA_DOC_PROCESSOR">			<documentationTagManagers xmi:id="_oOJsgY6vEeG5DZT_fiQl2g" ID="CLASSIFIER">				<documentationTags xmi:id="_oOJsgo6vEeG5DZT_fiQl2g" name="DESCRIPTION" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOJsg46vEeG5DZT_fiQl2g" name="@param &lt;&gt;" valueEditable="false"></documentationTags></documentationTagManagers>			<documentationTagManagers xmi:id="_oOKTkI6vEeG5DZT_fiQl2g" ID="OPERATION">				<documentationTags xmi:id="_oOKTkY6vEeG5DZT_fiQl2g" name="DESCRIPTION" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOKTko6vEeG5DZT_fiQl2g" name="@param" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOKTk46vEeG5DZT_fiQl2g" name="@param &lt;&gt;" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOKTlI6vEeG5DZT_fiQl2g" name="@return" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOKTlY6vEeG5DZT_fiQl2g" name="@throws" valueEditable="false"></documentationTags></documentationTagManagers>			<documentationTagManagers xmi:id="_oOKTlo6vEeG5DZT_fiQl2g" ID="ATTRIBUTE">				<documentationTags xmi:id="_oOKTl46vEeG5DZT_fiQl2g" name="DESCRIPTION" valueEditable="false"></documentationTags></documentationTagManagers></documentationTagProcessors>		<userDefinedAttributeCreationRule xmi:id="_7rMxYt9WEeSXCudwua_I0A" default="ASSOCIATION">			<rules xmi:id="_7rMxY99WEeSXCudwua_I0A" creationType="ATTRIBUTE" pattern="*" classType="DataType"></rules></userDefinedAttributeCreationRule></md.ce.java.rt.options:JavaLanguageOptions>	<md.ce.cppAnsi.rt.options:CppLanguageOptions xmi:id="_D43aEOQMEeCJQfWZbM1pkQ" commentStyle="0" header="@(#) $FILE_NAME" documentationProcessorID="STANDARD_PROCESSOR" macros="//This file contains a list of explicit macros to be expanded before reverse engineering&#13;&#10;#define ODBCXX_EXPORT&#13;&#10;#define __EXPORT&#13;&#10;&#13;&#10;//Type Casting of MFC Class Objects&#13;&#10;#define DYNAMIC_DOWNCAST( class, pointer )&#13;&#10;#define STATIC_DOWNCAST( class_name, pobject )&#13;&#10;&#13;&#10;//Run-Time Object Model Services&#13;&#10;#define DECLARE_DYNAMIC( class_name )&#13;&#10;#define DECLARE_DYNCREATE( class_name )&#13;&#10;#define DECLARE_SERIAL( class_name )&#13;&#10;#define IMPLEMENT_DYNAMIC( class_name, base_class_name )&#13;&#10;#define IMPLEMENT_DYNCREATE( class_name, base_class_name )&#13;&#10;#define IMPLEMENT_SERIAL( class_name, base_class_name, wSchema )&#13;&#10;#define RUNTIME_CLASS( class_name )&#13;&#10;#define DECLARE_OLECREATE( class_name )&#13;&#10;#define IMPLEMENT_OLECREATE( class_name, external_name, l, w1, w2, b1, b2, b3, b4, b5, b6, b7, b8 )&#13;&#10;&#13;&#10;//Diagnostic Services&#13;&#10;#define ASSERT( booleanExpression )&#13;&#10;#define ASSERT_KINDOF( classname, pobject )&#13;&#10;#define ASSERT_VALID( pObject )&#13;&#10;#define TRACE( exp )&#13;&#10;#define TRACE0( exp )&#13;&#10;#define TRACE1( exp, param1 )&#13;&#10;#define TRACE2( exp, param1, param2 )&#13;&#10;#define TRACE3( exp, param1, param2, param3 )&#13;&#10;#define VERIFY( booleanExpression )&#13;&#10;&#13;&#10;//Exception processing&#13;&#10;#define TRY&#13;&#10;#define CATCH( exception_class, exception_object_pointer_name )&#13;&#10;#define CATCH_ALL( exception_object_pointer_name )&#13;&#10;#define AND_CATCH( exception_class, exception_object_pointer_name )&#13;&#10;#define AND_CATCH_ALL( exception_object_pointer_name )&#13;&#10;#define END_CATCH&#13;&#10;#define END_CATCH_ALL&#13;&#10;#define THROW( exception_object_pointer )&#13;&#10;#define THROW_LAST( )&#13;&#10;&#13;&#10;//Message Map Macros&#13;&#10;#define DECLARE_MESSAGE_MAP( )&#13;&#10;#define BEGIN_MESSAGE_MAP( theClass, baseClass )&#13;&#10;#define END_MESSAGE_MAP( )&#13;&#10;#define ON_COMMAND( id, memberFxn )&#13;&#10;#define ON_CONTROL( wNotifyCode, id, memberFxn )&#13;&#10;#define ON_MESSAGE( message, memberFxn )&#13;&#10;#define ON_OLECMD( pguid, olecmdid, id )&#13;&#10;#define ON_REGISTERED_MESSAGE( nMessageVariable, memberFxn )&#13;&#10;#define ON_REGISTERED_THREAD_MESSAGE( nMessageVariable, memberFxn )&#13;&#10;#define ON_THREAD_MESSAGE( message, memberFxn )&#13;&#10;#define ON_UPDATE_COMMAND_UI( id, memberFxn )&#13;&#10;#define ON_COMMAND_RANGE( id1, id2, memberFxn )&#13;&#10;#define ON_UPDATE_COMMAND_UI_RANGE( id1, id2, memberFxn )&#13;&#10;#define ON_CONTROL_RANGE( wNotifyCode, id1, id2, memberFxn )&#13;&#10;#define ON_WM_CREATE( )&#13;&#10;#define ON_WM_DESTROY( )&#13;&#10;#define ON_NOTIFY( wNotifyCode, id, memberFxn )&#13;&#10;#define ON_WM_TIMER( )&#13;&#10;#define ON_WM_SYSCOMMAND( )&#13;&#10;#define ON_BN_CLICKED( id, memberFxn )&#13;&#10;#define ON_WM_PAINT( )&#13;&#10;#define ON_WM_QUERYDRAGICON( )&#13;&#10;#define ON_WM_SIZE( )&#13;&#10;&#13;&#10;//Application information and management&#13;&#10;BOOL AFXAPI AfxWinInit( HINSTANCE hInstance, HINSTANCE hPrevInstance, LPTSTR lpCmdLine, int nCmdShow )&#13;&#10;&#13;&#10;//Database Macros and Globals&#13;&#10;#define AFX_ODBC_CALL( SQLFunc )&#13;&#10;#define AFX_SQL_ASYNC( prs, SQLFunc )&#13;&#10;#define AFX_SQL_SYNC( SQLFunc )&#13;&#10;&#13;&#10;//Internet Server API (ISAPI) Parse Maps&#13;&#10;#define BEGIN_PARSE_MAP( theClass, baseClass )&#13;&#10;#define ON_PARSE_COMMAND( FnName, mapClass, Args )&#13;&#10;#define ON_PARSE_COMMAND_PARAMS( Params )&#13;&#10;#define DEFAULT_PARSE_COMMAND( FnName, mapClass )&#13;&#10;#define END_PARSE_MAP( theClass )&#13;&#10;&#13;&#10;//Internet Server API (ISAPI) Diagnostic Macros&#13;&#10;#define ISAPIASSERT( booleanExpression )&#13;&#10;#define ISAPITRACE( exp )&#13;&#10;#define ISAPITRACE0( exp )&#13;&#10;#define ISAPITRACE1( exp, param1 )&#13;&#10;#define ISAPITRACE2( exp, param1, param2 )&#13;&#10;#define ISAPITRACE3( exp, param1, param2, param3 )&#13;&#10;#define ISAPIVERIFY( booleanExpression )&#13;&#10;&#13;&#10;&#13;&#10;// OLE Dispatch Maps&#13;&#10;#define DECLARE_DISPATCH_MAP( )&#13;&#10;#define BEGIN_DISPATCH_MAP( theClass, baseClass )&#13;&#10;#define END_DISPATCH_MAP( )&#13;&#10;#define DISP_FUNCTION( theClass, pszName, pfnMember, vtRetVal, vtsParams )&#13;&#10;#define DISP_PROPERTY( theClass, pszName, memberName, vtPropType )&#13;&#10;#define DISP_PROPERTY_EX( theClass, pszName, memberGet, memberSet, vtPropType )&#13;&#10;#define DISP_PROPERTY_NOTIFY( theClass, szExternalName, memberName, pfnAfterSet, vtPropType )&#13;&#10;#define DISP_PROPERTY_NOTIFY( theClass, pszExternalName, pfnGet, pfnSet, vtPropType, vtsParams )&#13;&#10;#define DISP_DEFVALUE( theClass, pszName )&#13;&#10;&#13;&#10;// OLE Type Library Access&#13;&#10;#define DECLARE_OLETYPELIB( class_name )&#13;&#10;#define IMPLEMENT_OLETYPELIB( class_name, tlid, wVerMajor, wVerMinor )&#13;&#10;&#13;&#10;// OLE Property Pages&#13;&#10;#define BEGIN_PROPPAGEIDS( class_name, count )&#13;&#10;#define END_PROPPAGEIDS( class_name )&#13;&#10;#define PROPPAGEID( clsid )&#13;&#10;&#13;&#10;// OLE Event Maps&#13;&#10;#define DECLARE_EVENT_MAP( )&#13;&#10;#define BEGIN_EVENT_MAP( theClass, baseClass )&#13;&#10;#define END_EVENT_MAP( )&#13;&#10;#define EVENT_CUSTOM( pszName, pfnFire, vtsParams )&#13;&#10;#define EVENT_CUSTOM_ID( pszName, dispid, pfnFire, vtsParams )&#13;&#10;#define ON_OLEVERB( idsVerbName, memberFxn )&#13;&#10;#define ON_STDOLEVERB( iVerb, memberFxn )&#13;&#10;&#13;&#10;// OLE Event Sink Maps&#13;&#10;#define BEGIN_EVENTSINK_MAP( theClass, baseClass )&#13;&#10;#define DECLARE_EVENTSINK_MAP( )&#13;&#10;#define END_EVENTSINK_MAP( )&#13;&#10;#define ON_EVENT( theClass, id, dispid, pfnHandler, vtsParams )&#13;&#10;#define ON_EVENT_RANGE( theClass, idFirst, idLast, dispid, pfnHandler, vtsParams )&#13;&#10;#define ON_EVENT_REFLECT( theClass, dispid, pfnHandler, vtsParams )&#13;&#10;#define ON_PROPNOTIFY( theClass, id, dispid, pfnRequest, pfnChanged )&#13;&#10;#define ON_PROPNOTIFY_RANGE( theClass, idFirst, idLast, dispid, pfnRequest, pfnChanged )&#13;&#10;#define ON_PROPNOTIFY_REFLECT( theClass, dispid, pfnRequest, pfnChanged )&#13;&#10;&#13;&#10;// OLE Connection Maps&#13;&#10;#define BEGIN_CONNECTION_PART( theClass, localClass )&#13;&#10;#define END_CONNECTION_PART( localClass )&#13;&#10;#define CONNECTION_IID( iid )&#13;&#10;#define DECLARE_CONNECTION_MAP( )&#13;&#10;#define BEGIN_CONNECTION_MAP( theClass, theBase )&#13;&#10;#define END_CONNECTION_MAP( )&#13;&#10;#define CONNECTION_PART( theClass, iid, localClass )&#13;&#10;&#13;&#10;// OLE Registering OLE Controls&#13;&#10;BOOL AFXAPI AfxOleRegisterPropertyPageClass( HINSTANCE hInstance, REFCLSID clsid, UINT idTypeName, int nRegFlags )&#13;&#10;&#13;&#10;// OLE Class Factories and Licensing&#13;&#10;#define DECLARE_OLECREATE_EX( class_name )&#13;&#10;#define IMPLEMENT_OLECREATE_EX( class_name, external_name, l, w1, w2, b1, b2, b3, b4, b5, b6, b7, b8 )&#13;&#10;#define BEGIN_OLEFACTORY( class_name )&#13;&#10;#define END_OLEFACTORY( class_name )&#13;&#10;&#13;&#10;//ATL&#13;&#10;#define DECLARE_AGGREGATABLE( x )&#13;&#10;#define DECLARE_CLASSFACTORY( )&#13;&#10;#define DECLARE_CLASSFACTORY_EX( cf )&#13;&#10;#define DECLARE_CLASSFACTORY2( lic )&#13;&#10;#define DECLARE_CLASSFACTORY_AUTO_THREAD( )&#13;&#10;#define DECLARE_CLASSFACTORY_SINGLETON( obj )&#13;&#10;#define DECLARE_GET_CONTROLLING_UNKNOWN( )&#13;&#10;#define DECLARE_NOT_AGGREGATABLE( x )&#13;&#10;#define DECLARE_ONLY_AGGREGATABLE( x )&#13;&#10;#define DECLARE_POLY_AGGREGATABLE( x )&#13;&#10;#define DECLARE_PROTECT_FINAL_CONSTRUCT( )&#13;&#10;#define BEGIN_CATEGORY_MAP( theClass )&#13;&#10;#define END_CATEGORY_MAP( )&#13;&#10;#define IMPLEMENTED_CATEGORY( catID )&#13;&#10;#define REQUIRED_CATEGORY( catID )&#13;&#10;#define BEGIN_COM_MAP( x )&#13;&#10;#define COM_INTERFACE_ENTRY( x )&#13;&#10;#define COM_INTERFACE_ENTRY_IID( iid, x )&#13;&#10;#define COM_INTERFACE_ENTRY2( x, x2 )&#13;&#10;#define COM_INTERFACE_ENTRY2_IID( iid, x, x2 )&#13;&#10;#define COM_INTERFACE_ENTRY_FUNC( iid, dw, func )&#13;&#10;#define COM_INTERFACE_ENTRY_FUNC_BLIND( dw, func )&#13;&#10;#define COM_INTERFACE_ENTRY_TEAR_OFF( iid, x )&#13;&#10;#define COM_INTERFACE_ENTRY_CACHED_TEAR_OFF( iid, x, punk )&#13;&#10;#define COM_INTERFACE_ENTRY_AGGREGATE( iid, punk )&#13;&#10;#define COM_INTERFACE_ENTRY_AGGREGATE_BLIND( punk )&#13;&#10;#define COM_INTERFACE_ENTRY_AUTOAGGREGATE( iid, punk, clsid )&#13;&#10;#define COM_INTERFACE_ENTRY_AUTOAGGREGATE_BLIND( punk, clsid )&#13;&#10;#define COM_INTERFACE_ENTRY_CHAIN( classname )&#13;&#10;#define COM_INTERFACE_ENTRY_BREAK( x )&#13;&#10;#define COM_INTERFACE_ENTRY_NOINTERFACE( x )&#13;&#10;#define END_COM_MAP( )&#13;&#10;&#13;&#10;#define BEGIN_SINK_MAP( _class )&#13;&#10;#define END_SINK_MAP( )&#13;&#10;#define SINK_ENTRY( id, dispid, fn )&#13;&#10;#define SINK_ENTRY_EX( id, iid, dispid, fn )&#13;&#10;#define SINK_ENTRY_INFO( id, iid, dispid, fn, info)&#13;&#10;#define BEGIN_CONNECTION_POINT_MAP( x )&#13;&#10;#define CONNECTION_POINT_ENTRY( iid )&#13;&#10;#define END_CONNECTION_POINT_MAP( )&#13;&#10;#define BEGIN_EXTENSION_SNAPIN_NODEINFO_MAP( classname )&#13;&#10;#define BEGIN_SNAPINTOOLBARID_MAP( _class )&#13;&#10;#define END_EXTENSION_SNAPIN_NODEINFO_MAP( )&#13;&#10;#define END_SNAPINTOOLBARID_MAP( _class )&#13;&#10;#define EXTENSION_SNAPIN_DATACLASS( dataClass )&#13;&#10;#define EXTENSION_SNAPIN_NODEINFO_ENTRY( dataClass )&#13;&#10;#define SNAPINMENUID( id )&#13;&#10;#define SNAPINTOOLBARID_ENTRY( id )&#13;&#10;#define ATLTRACE( exp )&#13;&#10;#define ATLTRACENOTIMPL( funcname )&#13;&#10;#define ATLTRACE2( DWORD category, UINT level, LPCSTR lpszFormat, ... )&#13;&#10;#define BEGIN_MSG_MAP( theClass )&#13;&#10;#define MESSAGE_HANDLER( msg, func )&#13;&#10;#define MESSAGE_RANGE_HANDLER( msgFirst, msgLast, func )&#13;&#10;#define COMMAND_HANDLER( id, code, func )&#13;&#10;#define COMMAND_ID_HANDLER( id, func )&#13;&#10;#define COMMAND_RANGE_HANDLER( idFirst, idLast, func )&#13;&#10;#define NOTIFY_HANDLER( id, cd, func )&#13;&#10;#define NOTIFY_ID_HANDLER( id, func )&#13;&#10;#define NOTIFY_CODE_HANDLER( cd, func )&#13;&#10;#define NOTIFY_RANGE_HANDLER( idFirst, idLast, func )&#13;&#10;#define CHAIN_MSG_MAP( theChainClass )&#13;&#10;#define CHAIN_MSG_MAP_MEMBER( theChainMember )&#13;&#10;#define CHAIN_MSG_MAP_ALT( theChainClass, msgMapID )&#13;&#10;#define CHAIN_MSG_MAP_ALT_MEMBER( theChainMember, msgMapID )&#13;&#10;#define CHAIN_MSG_MAP_DYNAMIC( dynaChainID )&#13;&#10;#define END_MSG_MAP( )&#13;&#10;#define ALT_MSG_MAP( msgMapID )&#13;&#10;#define DECLARE_EMPTY_MSG_MAP( )&#13;&#10;#define COMMAND_CODE_HANDLER( code, func )&#13;&#10;#define REFLECT_NOTIFICATIONS( )&#13;&#10;#define DEFAULT_REFLECTION_HANDLER( )&#13;&#10;#define BEGIN_OBJECT_MAP( x )&#13;&#10;#define OBJECT_ENTRY( clsid, class )&#13;&#10;#define OBJECT_ENTRY_NON_CREATEABLE( class )&#13;&#10;#define END_OBJECT_MAP( )&#13;&#10;#define DECLARE_OBJECT_DESCRIPTION( x )&#13;&#10;#define BEGIN_PROP_MAP( theClass )&#13;&#10;#define PROP_DATA_ENTRY( szDesc, member, vt )&#13;&#10;#define PROP_ENTRY( szDesc, dispid, clsid )&#13;&#10;#define PROP_ENTRY_EX( szDesc, dispid, clsid, iidDispatch )&#13;&#10;#define PROP_PAGE( clsid )&#13;&#10;#define END_PROPERTY_MAP( )&#13;&#10;#define DECLARE_NO_REGISTRY( )&#13;&#10;#define DECLARE_REGISTRY( class, pid, vpid, nid, flags )&#13;&#10;#define DECLARE_REGISTRY_RESOURCE( x )&#13;&#10;#define DECLARE_REGISTRY_RESOURCEID( x )&#13;&#10;#define BEGIN_SERVICE_MAP( theClass )&#13;&#10;#define END_SERVICE_MAP( )&#13;&#10;#define SERVICE_ENTRY( SID )&#13;&#10;#define SERVICE_ENTRY_CHAIN( punk )&#13;&#10;#define IMPLEMENT_BOOL_STOCKPROP( fname, pname, dispid )&#13;&#10;#define IMPLEMENT_BSTR_STOCKPROP( fname, pname, dispid )&#13;&#10;#define IMPLEMENT_STOCKPROP( type, fname, pname, dispid )&#13;&#10;#define A2BSTR(lpa)&#13;&#10;#define OLE2A(lpa)&#13;&#10;#define T2A(lpa)&#13;&#10;#define W2A(lpa)&#13;&#10;#define A2COLE(lpa)&#13;&#10;#define OLE2BSTR(lpa)&#13;&#10;#define T2BSTR(lpa)&#13;&#10;#define W2BSTR(lpa)&#13;&#10;#define A2CT(lpa)&#13;&#10;#define OLE2CA(lpa)&#13;&#10;#define T2CA(lpa)&#13;&#10;#define W2CA(lpa)&#13;&#10;#define A2CW(lpa)&#13;&#10;#define OLE2CT(lpa)&#13;&#10;#define T2COLE(lpa)&#13;&#10;#define W2COLE(lpa)&#13;&#10;#define A2OLE(lpa)&#13;&#10;#define OLE2CW(lpa)&#13;&#10;#define T2CW(lpa)&#13;&#10;#define W2CT(lpa)&#13;&#10;#define A2T(lpa)&#13;&#10;#define OLE2T(lpa)&#13;&#10;#define T2OLE(lpa)&#13;&#10;#define W2OLE(lpa)&#13;&#10;#define A2W(lpa)&#13;&#10;#define OLE2W(lpa)&#13;&#10;#define T2W(lpa)&#13;&#10;#define W2T(lpa)&#13;&#10;#define DEVMODEA2W(lpa)&#13;&#10;#define TEXTMETRICA2W(lpa)&#13;&#10;#define DEVMODEOLE2T(lpa)&#13;&#10;#define TEXTMETRICOLE2T(lpa)&#13;&#10;#define DEVMODET2OLE(lpa)&#13;&#10;#define TEXTMETRICT2OLE(lpa)&#13;&#10;#define DEVMODEW2A(lpa)&#13;&#10;#define TEXTMETRICW2A(lpa)&#13;&#10;#define DECLARE_WND_CLASS( WndClassName )&#13;&#10;#define DECLARE_WND_SUPERCLASS( WndClassName, OrigWndClassName )&#13;&#10;#define DECLARE_WND_CLASS_EX( WndClassName, style, bkgnd )&#13;&#10;&#13;&#10;// OLE DB&#13;&#10;#define BEGIN_ACCESSOR( num, bAuto )&#13;&#10;#define BEGIN_ACCESSOR_MAP( x, num )&#13;&#10;#define END_ACCESSOR( )&#13;&#10;#define END_ACCESSOR_MAP( )&#13;&#10;#define BEGIN_COLUMN_MAP( x )&#13;&#10;#define BOOKMARK_ENTRY( variable )&#13;&#10;#define COLUMN_ENTRY( nOrdinal, data )&#13;&#10;#define COLUMN_ENTRY_TYPE ( nOrdinal, wType, data )&#13;&#10;#define COLUMN_ENTRY_TYPE_SIZE( nOrdinal, wType, nLength, data )&#13;&#10;#define BLOB _ENTRY( nOrdinal, IID, flags, data )&#13;&#10;#define COLUMN_ENTRY_EX( nOrdinal, wType, nLength, nPrecision, nScale, data, length, status )&#13;&#10;#define COLUMN_ENTRY_LENGTH( nOrdinal, data, length )&#13;&#10;#define COLUMN_ENTRY_LENGTH_STATUS( nOrdinal, data, length, status )&#13;&#10;#define COLUMN_ENTRY_PS( nOrdinal, nPrecision, nScale, data ) &#13;&#10;#define COLUMN_ENTRY_PS_LENGTH( nOrdinal, nPrecision, nScale, data, length )&#13;&#10;#define COLUMN_ENTRY_PS_STATUS( nOrdinal, nPrecision, nScale, data, status )&#13;&#10;#define COLUMN_ENTRY_PS_LENGTH_STATUS( nOrdinal, nPrecision, nScale, data, length, status )&#13;&#10;#define COLUMN_ENTRY_STATUS( nOrdinal, data, status )&#13;&#10;#define END_COLUMN_MAP( )&#13;&#10;#define DEFINE_COMMAND( x, szCommand )&#13;&#10;#define BEGIN_PARAM_MAP( x )&#13;&#10;#define END_PARAM_MAP( )&#13;&#10;#define SET_PARAM_TYPE( type )&#13;&#10;#define BEGIN_PROPERTY_SET( pguid )&#13;&#10;#define BEGIN_PROPERTY_SET(pguid, flags)&#13;&#10;#define BEGIN_PROPSET_MAP( Class )&#13;&#10;#define CHAIN_PROPERTY_SET( ChainClass )&#13;&#10;#define END_PROPERTY_SET( guid )&#13;&#10;#define END_PROPSET_MAP( )&#13;&#10;#define PROPERTY_INFO_ENTRY( dwPropID )&#13;&#10;#define PROPERTY_INFO_ENTRY( dwPropID, vt, dwFlags, value, options)&#13;&#10;#define PROPERTY_INFO_ENTRY( dwPropID, value )&#13;&#10;#define BEGIN_PROVIDER_COLUMN_MAP( theClass ) &#13;&#10;#define END_PROVIDER_COLUMN_MAP( )&#13;&#10;#define PROVIDER_COLUMN_ENTRY_GN ( name, ordinal, flags, colSize, dbtype, precision, scale, guid )&#13;&#10;#define PROVIDER_COLUMN_ENTRY_FIXED( name, ordinal, dbtype, member )&#13;&#10;#define PROVIDER_COLUMN_ENTRY_LENGTH( name, ordinal, size, member )&#13;&#10;#define PROVIDER_COLUMN_ENTRY_STR( name, ordinal, member )&#13;&#10;#define PROVIDER_COLUMN_ENTRY_WSTR( name, ordinal, member )&#13;&#10;&#13;&#10;// PARSE&#13;&#10;#define BEGIN_PARSE_MAP( theClass, baseClass )&#13;&#10;#define ON_PARSE_COMMAND( FnName, mapClass, Args )&#13;&#10;#define ON_PARSE_COMMAND_PARAMS( Params )&#13;&#10;#define DEFAULT_PARSE_COMMAND( FnName, mapClass )&#13;&#10;#define END_PARSE_MAP( theClass )&#13;&#10;#define END_PROPERTY_SET( guid )&#13;&#10;#define BEGIN_PROPSET_MAP( Class )&#13;&#10;#define PROPERTY_INFO_ENTRY( dwPropID )&#13;&#10;#define END_PROPSET_MAP( )&#13;&#10;&#13;&#10;#define MAKELPARAM(low, high)&#13;&#10;#define MAKELRESULT(low, high)&#13;&#10;#define MAKELP(sel, off) &#13;&#10;#define SELECTOROF(lp) &#13;&#10;#define OFFSETOF(lp) &#13;&#10;#define FIELDOFFSET(type, field)&#13;&#10;#define afx_msg&#13;&#10;#define ACE_ALLOC_HOOK_DECLARE&#13;&#10;&#13;&#10;// xerces&#13;&#10;#define XERCES_CPP_NAMESPACE_BEGIN namespace xerces {&#13;&#10;#define XERCES_CPP_NAMESPACE_END }&#13;&#10;#define XERCES_CPP_NAMESPACE_USE using namespace XERCES_CPP_NAMESPACE;&#13;&#10;#define XERCES_CPP_NAMESPACE_QUALIFIER XERCES_CPP_NAMESPACE::&#13;&#10;#define CDOM_EXPORT&#13;&#10;#define ATL_NO_VTABLE&#13;&#10;#define PLATFORM_IMPORT&#13;&#10;#define PARSERS_EXPORT&#13;&#10;&#13;&#10;// QT&#13;&#10;#define Q_AUTOTEST_EXPORT&#13;&#10;#define Q_CLASSINFO(name, value)&#13;&#10;#define Q_COMPAT_EXPORT&#13;&#10;#define Q_CORE_EXPORT&#13;&#10;#define Q_CORE_EXPORT_INLINE inline&#13;&#10;#define Q_D(Class)&#13;&#10;#define Q_DECL_IMPORT&#13;&#10;#define Q_DECLARE_ASSOCIATIVE_ITERATOR(map)&#13;&#10;#define Q_DECLARE_BUILTIN_METATYPE(TYPE, NAME)&#13;&#10;#define Q_DECLARE_EXTENSION_INTERFACE(IFace, IId)&#13;&#10;#define Q_DECLARE_FLAGS(Flags, enum)&#13;&#10;#define Q_DECLARE_INTERFACE(IFace, IId)&#13;&#10;#define Q_DECLARE_METATYPE(txt)&#13;&#10;#define Q_DECLARE_MUTABLE_SEQUENTIAL_ITERATOR(c)&#13;&#10;#define Q_DECLARE_MUTABLE_ASSOCIATIVE_ITERATOR(c)&#13;&#10;#define Q_DECLARE_OPERATORS_FOR_FLAGS(Flags)&#13;&#10;#define Q_DECLARE_PRIVATE(Class)&#13;&#10;#define Q_DECLARE_PUBLIC(Class)&#13;&#10;#define Q_DECLARE_SEQUENTIAL_ITERATOR(name)&#13;&#10;#define Q_DECLARE_SHARED(name)&#13;&#10;#define Q_DECLARE_TYPEINFO(TYPE, FLAGS)&#13;&#10;#define Q_DECL_DEPRECATED&#13;&#10;#define Q_DISABLE_COPY(Class)&#13;&#10;#define Q_DUMMY_COMPARISON_OPERATOR(c)&#13;&#10;#define Q_ENUMS(x)&#13;&#10;#define Q_FLAGS(x)&#13;&#10;#define Q_GADGET&#13;&#10;#define Q_GUI_EXPORT&#13;&#10;#define Q_GUI_EXPORT_INLINE inline&#13;&#10;#define Q_INLINE_TEMPLATE&#13;&#10;#define Q_INTERFACES(x)&#13;&#10;#define Q_NETWORK_EXPORT&#13;&#10;#define Q_NOREPLY&#13;&#10;#define Q_OBJECT&#13;&#10;#define Q_OPENGL_EXPORT&#13;&#10;#define Q_OUTOFLINE_TEMPLATE inline&#13;&#10;#define Q_OVERRIDE(text)&#13;&#10;#define Q_PRIVATE_SLOT(d, signature)&#13;&#10;#define Q_PROPERTY(text)&#13;&#10;#define Q_Q(Class)&#13;&#10;#define Q_REQUIRED_RESULT&#13;&#10;#define Q_SCRIPTABLE&#13;&#10;#define Q_SIGNALS protected&#13;&#10;#define Q_SLOTS&#13;&#10;#define Q_SQL_EXPORT&#13;&#10;#define Q_SVG_EXPORT&#13;&#10;#define Q_TESTLIB_EXPORT&#13;&#10;#define Q_TYPENAME typename&#13;&#10;#define Q_XML_EXPORT&#13;&#10;&#13;&#10;#define QDBUS_EXPORT&#13;&#10;#define QDESIGNER_COMPONENTS_EXPORT&#13;&#10;#define QDESIGNER_EXTENSION_EXPORT&#13;&#10;#define QDESIGNER_SDK_EXPORT&#13;&#10;#define QDESIGNER_SHARED_EXPORT&#13;&#10;#define QDESIGNER_UILIB_EXPORT&#13;&#10;#define QDESIGNER_WIDGET_EXPORT&#13;&#10;#define QDOC_PROPERTY(text)&#13;&#10;&#13;&#10;#define QT_ASCII_CAST_WARN&#13;&#10;#define QT_ASCII_CAST_WARN_CONSTRUCTOR&#13;&#10;#define QT_ASSISTANT_CLIENT_EXPORT&#13;&#10;#define QT_BEGIN_HEADER&#13;&#10;#define QT_DEPRECATED&#13;&#10;#define QT_DEPRECATED_VARIABLE&#13;&#10;#define QT_DEPRECATED_CONSTRUCTOR&#13;&#10;#define QT_END_HEADER&#13;&#10;#define QT_FASTCALL&#13;&#10;#define QT_FT_BEGIN_HEADER&#13;&#10;#define QT_FT_END_HEADER&#13;&#10;#define QT_MOC_COMPAT&#13;&#10;#define QT_MODULE(name)&#13;&#10;#define QT_STATIC_CONST static const&#13;&#10;#define QT_STATIC_CONST_IMPL const&#13;&#10;#define QT_TR_NOOP(x)&#13;&#10;#define QT_TRANSLATE_NOOP(scope, x)&#13;&#10;&#13;&#10;#define slots&#13;&#10;#define signals protected&#13;&#10;&#13;&#10;&#13;&#10;// Microsoft extension&#13;&#10;#define CALLBACK&#13;&#10;#define LRESULT void&#13;&#10;#define _ENTRY(p1, p2, p3, p4) p1&#13;&#10;&#13;&#10;#define CFX_EXPORT&#13;&#10;&#13;&#10;// GCC&#13;&#10;#define __extension__&#13;&#10;&#13;&#10;// Symbian macro&#13;&#10;#define _L(string) TPtrC((const TText*) string)&#13;&#10;#define _LIT(name,s) const static TListC&lt;sizeof(s)&gt; name = {sizeof(s) -1,s}&#13;&#10;#define _LIT8(name,s) const static TListC&lt;sizeof(s)&gt; name = {sizeof(s) -1,s}&#13;&#10;&#13;&#10;#define IMPORT_C /*__declspec(dllimport)*/&#13;&#10;#define EXPORT_C /*__declspec(dllexport)*/&#13;&#10;&#13;&#10;#define NONSHARABLE_CLASS(x) class x&#13;&#10;#define NONSHARABLE_STRUCT(x) struct x&#13;&#10;&#13;&#10;#define GLREF_D extern&#13;&#10;#define GLDEF_D&#13;&#10;#define LOCAL_D static&#13;&#10;#define GLREF_C extern&#13;&#10;#define GLDEF_C&#13;&#10;#define LOCAL_C static&#13;&#10;">		<userDefinedAttributeCreationRule xmi:id="_7rMxYN9WEeSXCudwua_I0A" default="ASSOCIATION">			<rules xmi:id="_7rMxYd9WEeSXCudwua_I0A" creationType="ATTRIBUTE" pattern="*" classType="DataType"></rules></userDefinedAttributeCreationRule></md.ce.cppAnsi.rt.options:CppLanguageOptions>	<md.ce.csh.rt.options:CshLanguageOptions xmi:id="_D5AkAOQMEeCJQfWZbM1pkQ" commentStyle="0" header="@(#) $FILE_NAME" documentationProcessorID="STANDARD_PROCESSOR">		<documentationTagProcessors xsi:type="md.ce.csh.code.documentation:CshDocumentationProcessor" xmi:id="_oOd1kI6vEeG5DZT_fiQl2g" ID="CSH_XML_PROCESSOR">			<documentationTagManagers xmi:id="_oOd1kY6vEeG5DZT_fiQl2g" ID="CLASSIFIER">				<documentationTags xmi:id="_oOd1ko6vEeG5DZT_fiQl2g" name="summary" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOd1k46vEeG5DZT_fiQl2g" name="remarks" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOd1lI6vEeG5DZT_fiQl2g" name="permission" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOd1lY6vEeG5DZT_fiQl2g" name="example" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOd1lo6vEeG5DZT_fiQl2g" name="seealso" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOd1l46vEeG5DZT_fiQl2g" name="include" valueEditable="false"></documentationTags></documentationTagManagers>			<documentationTagManagers xmi:id="_oOd1mI6vEeG5DZT_fiQl2g" ID="OPERATION">				<documentationTags xmi:id="_oOd1mY6vEeG5DZT_fiQl2g" name="summary" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOd1mo6vEeG5DZT_fiQl2g" name="value" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOd1m46vEeG5DZT_fiQl2g" name="param" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOd1nI6vEeG5DZT_fiQl2g" name="returns" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOd1nY6vEeG5DZT_fiQl2g" name="exception" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOd1no6vEeG5DZT_fiQl2g" name="permission" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOd1n46vEeG5DZT_fiQl2g" name="example" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOd1oI6vEeG5DZT_fiQl2g" name="seealso" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOd1oY6vEeG5DZT_fiQl2g" name="include" valueEditable="false"></documentationTags></documentationTagManagers>			<documentationTagManagers xmi:id="_oOd1oo6vEeG5DZT_fiQl2g" ID="ATTRIBUTE">				<documentationTags xmi:id="_oOd1o46vEeG5DZT_fiQl2g" name="summary" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOd1pI6vEeG5DZT_fiQl2g" name="permission" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOd1pY6vEeG5DZT_fiQl2g" name="example" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOd1po6vEeG5DZT_fiQl2g" name="seealso" valueEditable="false"></documentationTags>				<documentationTags xmi:id="_oOd1p46vEeG5DZT_fiQl2g" name="include" valueEditable="false"></documentationTags></documentationTagManagers></documentationTagProcessors>		<userDefinedAttributeCreationRule xmi:id="_7rMKVN9WEeSXCudwua_I0A" default="ASSOCIATION">			<rules xmi:id="_7rMKVd9WEeSXCudwua_I0A" creationType="ATTRIBUTE" pattern="*" classType="DataType"></rules></userDefinedAttributeCreationRule></md.ce.csh.rt.options:CshLanguageOptions>	<md.ce.msil.rt.options:MsilLanguageOptions xmi:id="_D5AkG-QMEeCJQfWZbM1pkQ" commentStyle="0" header="@(#) $FILE_NAME" documentationProcessorID="STANDARD_PROCESSOR">		<userDefinedAttributeCreationRule xmi:id="_7rOmkt9WEeSXCudwua_I0A" default="ASSOCIATION">			<rules xmi:id="_7rOmk99WEeSXCudwua_I0A" creationType="ATTRIBUTE" pattern="*" classType="DataType"></rules></userDefinedAttributeCreationRule></md.ce.msil.rt.options:MsilLanguageOptions>	<md.ce.corbaidl.rt.options:CORBAIDLLanguageOptions xmi:id="_D5AkHuQMEeCJQfWZbM1pkQ" commentStyle="0" header="@(#) $FILE_NAME" documentationProcessorID="STANDARD_PROCESSOR">		<userDefinedAttributeCreationRule xmi:id="_7rOmkN9WEeSXCudwua_I0A" default="ASSOCIATION">			<rules xmi:id="_7rOmkd9WEeSXCudwua_I0A" creationType="ATTRIBUTE" pattern="*" classType="DataType"></rules></userDefinedAttributeCreationRule></md.ce.corbaidl.rt.options:CORBAIDLLanguageOptions></xmi:XMI>